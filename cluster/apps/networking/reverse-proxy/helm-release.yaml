---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: reverse-proxy
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: reverse-proxy
      version: 2.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      replicas: 3

    instances:
      - name: pve-kepler
        enabled: true
        ip: 10.33.1.174
        port: 8006
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            hajimari.io/icon: "monitor-multiple"
            hajimari.io/appName: "pve-kepler"
            ingress.kubernetes.io/configuration-snippet:
              "proxy_set_header Host $http_host;\nproxy_set_header
              X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
              Connection $connection_upgrade;      "
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
            nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
            nginx.ingress.kubernetes.io/cors-allow-origin: "*"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |-
              client_max_body_size 100G;
              server_tokens off;
              proxy_hide_header X-Powered-By;
          tls:
            - hosts:
                - pve-kepler.local.${SECRET_DOMAIN}
              secretName: "pve-kepler-tls"
          hosts:
            - host: pve-kepler.local.${SECRET_DOMAIN}
              path: /

      - name: pve-navi
        enabled: true
        ip: 10.33.1.175
        port: 8006
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            hajimari.io/icon: "monitor-multiple"
            hajimari.io/appName: "pve-navi"
            ingress.kubernetes.io/configuration-snippet:
              "proxy_set_header Host $http_host;\nproxy_set_header
              X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
              Connection $connection_upgrade;      "
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
            nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
            nginx.ingress.kubernetes.io/cors-allow-origin: "*"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |-
              client_max_body_size 100G;
              server_tokens off;
              proxy_hide_header X-Powered-By;
          tls:
            - hosts:
                - pve-navi.local.${SECRET_DOMAIN}
              secretName: "pve-navi-tls"
          hosts:
            - host: pve-navi.local.${SECRET_DOMAIN}
              path: /

      - name: pbs
        enabled: true
        ip: 10.33.1.250
        port: 8007
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            hajimari.io/icon: "monitor-multiple"
            hajimari.io/appName: "pbs"
            ingress.kubernetes.io/configuration-snippet:
              "proxy_set_header Host $http_host;\nproxy_set_header
              X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
              Connection $connection_upgrade;      "
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
            nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
            nginx.ingress.kubernetes.io/cors-allow-origin: "*"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |-
              client_max_body_size 100G;
              server_tokens off;
              proxy_hide_header X-Powered-By;
          tls:
            - hosts:
                - pbs.local.${SECRET_DOMAIN}
              secretName: "pbs-tls"
          hosts:
            - host: pbs.local.${SECRET_DOMAIN}
              path: /

      - name: adguard
        enabled: true
        ip: 10.33.1.98
        port: 80
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "shield-check-outline"
            hajimari.io/appName: "adguard"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - adguard.local.${SECRET_DOMAIN}
              secretName: "adguard-tls"
          hosts:
            - host: adguard.local.${SECRET_DOMAIN}
              path: /

      - name: adguard-2 # redundant DNS on raspi zero
        enabled: true
        ip: 10.33.1.219
        port: 80
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - adguard-2.local.${SECRET_DOMAIN}
              secretName: "adguard-2-tls"
          hosts:
            - host: adguard-2.local.${SECRET_DOMAIN}
              path: /

      - name: raspi-grafana
        enabled: true
        ip: 10.33.1.98
        port: 3000
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - raspi-grafana.local.${SECRET_DOMAIN}
              secretName: "raspi-grafana-tls"
          hosts:
            - host: raspi-grafana.local.${SECRET_DOMAIN}
              path: /

      - name: your-spotify-client
        enabled: true
        ip: 10.33.1.20
        port: 3001
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "spotify"
            hajimari.io/appName: "spotify-stats"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - spotify.local.${SECRET_DOMAIN}
              secretName: "spotify-client-tls"
          hosts:
            - host: spotify.local.${SECRET_DOMAIN}
              path: /

      - name: your-spotify-server
        enabled: true
        ip: 10.33.1.20
        port: 8080
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - api.spotify.local.${SECRET_DOMAIN}
              secretName: "spotify-server-tls"
          hosts:
            - host: api.spotify.local.${SECRET_DOMAIN}
              path: /

      - name: portainer
        enabled: true
        ip: 10.33.1.20
        port: 9000
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "docker"
            hajimari.io/appName: "portainer"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - portainer.local.${SECRET_DOMAIN}
              secretName: "portainer-tls"
          hosts:
            - host: portainer.local.${SECRET_DOMAIN}
              path: /

      - name: jellyfin
        enabled: true
        ip: 10.33.1.23
        port: 8096
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "jellyfish"
            hajimari.io/appName: "jellyfin"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - jellyfin.local.${SECRET_DOMAIN}
              secretName: "jellyfin-tls"
          hosts:
            - host: jellyfin.local.${SECRET_DOMAIN}
              path: /

      - name: transmission
        enabled: true
        ip: 10.33.1.23
        port: 8080
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "home-flood"
            hajimari.io/appName: "transmission"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - transmission.local.${SECRET_DOMAIN}
              secretName: "transmission-tls"
          hosts:
            - host: transmission.local.${SECRET_DOMAIN}
              path: /

      - name: jellyseerr
        enabled: true
        ip: 10.33.1.23
        port: 5055
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "magnify-expand"
            hajimari.io/appName: "jellyseerr"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - jellyseerr.local.${SECRET_DOMAIN}
              secretName: "jellyseerr-tls"
          hosts:
            - host: jellyseerr.local.${SECRET_DOMAIN}
              path: /

      - name: fileserver
        enabled: true
        ip: 10.33.1.234
        port: 443
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            ingress.kubernetes.io/configuration-snippet:
              "proxy_set_header Host $http_host;\nproxy_set_header
              X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
              Connection $connection_upgrade;      "
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
            nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
            nginx.ingress.kubernetes.io/cors-allow-origin: "*"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |-
              client_max_body_size 100G;
              server_tokens off;
              proxy_hide_header X-Powered-By;
          tls:
            - hosts:
                - fileserver.local.${SECRET_DOMAIN}
              secretName: "fileserver-tls"
          hosts:
            - host: fileserver.local.${SECRET_DOMAIN}
              path: /

      - name: fileserver-ui
        enabled: true
        ip: 10.33.1.234
        port: 12321
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "file-document-edit-outline"
            hajimari.io/appName: "fileserver"
            ingress.kubernetes.io/configuration-snippet:
              "proxy_set_header Host $http_host;\nproxy_set_header
              X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              \     \nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header
              Connection $connection_upgrade;      "
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
            nginx.ingress.kubernetes.io/cors-allow-headers: Authorization
            nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE
            nginx.ingress.kubernetes.io/cors-allow-origin: "*"
            nginx.ingress.kubernetes.io/enable-cors: "true"
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |-
              client_max_body_size 100G;
              server_tokens off;
              proxy_hide_header X-Powered-By;
          tls:
            - hosts:
                - fileserver-ui.local.${SECRET_DOMAIN}
              secretName: "fileserver-ui-tls"
          hosts:
            - host: fileserver-ui.local.${SECRET_DOMAIN}
              path: /

      - name: radarr
        enabled: true
        ip: 10.33.1.23
        port: 7878
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - radarr.local.${SECRET_DOMAIN}
              secretName: "radarr-tls"
          hosts:
            - host: radarr.local.${SECRET_DOMAIN}
              path: /

      - name: sonarr
        enabled: true
        ip: 10.33.1.23
        port: 8989
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - sonarr.local.${SECRET_DOMAIN}
              secretName: "sonarr-tls"
          hosts:
            - host: sonarr.local.${SECRET_DOMAIN}
              path: /

      - name: lidarr
        enabled: true
        ip: 10.33.1.23
        port: 8686
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - lidarr.local.${SECRET_DOMAIN}
              secretName: "lidarr-tls"
          hosts:
            - host: lidarr.local.${SECRET_DOMAIN}
              path: /

      - name: prowlarr
        enabled: true
        ip: 10.33.1.23
        port: 9696
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - prowlarr.local.${SECRET_DOMAIN}
              secretName: "prowlarr-tls"
          hosts:
            - host: prowlarr.local.${SECRET_DOMAIN}
              path: /

      - name: autobrr
        enabled: true
        ip: 10.33.1.23
        port: 7474
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - autobrr.local.${SECRET_DOMAIN}
              secretName: "autobrr-tls"
          hosts:
            - host: autobrr.local.${SECRET_DOMAIN}
              path: /

      - name: embystat
        enabled: true
        ip: 10.33.1.23
        port: 6555
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "false"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - embystat.local.${SECRET_DOMAIN}
              secretName: "embystat-tls"
          hosts:
            - host: embystat.local.${SECRET_DOMAIN}
              path: /

      - name: gitea
        enabled: true
        ip: 10.33.1.114
        port: 3331
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "git"
            hajimari.io/appName: "gitea"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - git.local.${SECRET_DOMAIN}
              secretName: "gitea-tls"
          hosts:
            - host: git.local.${SECRET_DOMAIN}
              path: /

      - name: nextcloud
        enabled: true
        ip: 10.33.1.114
        port: 8080
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "cloud-sync-outline"
            hajimari.io/appName: "nextcloud"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - cloud.local.${SECRET_DOMAIN}
              secretName: "nextcloud-tls"
          hosts:
            - host: cloud.local.${SECRET_DOMAIN}
              path: /

      - name: photoprism
        enabled: true
        ip: 10.33.1.114
        port: 2342
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "image-multiple"
            hajimari.io/appName: "photoprism"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - photoprism.local.${SECRET_DOMAIN}
              secretName: "photoprism-tls"
          hosts:
            - host: photoprism.local.${SECRET_DOMAIN}
              path: /

      - name: navidrome
        enabled: true
        ip: 10.33.1.23
        port: 4533
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "music-box-multiple-outline"
            hajimari.io/appName: "navidrome"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - navidrome.local.${SECRET_DOMAIN}
              secretName: "navidrome-tls"
          hosts:
            - host: navidrome.local.${SECRET_DOMAIN}
              path: /

      - name: firefly
        enabled: true
        ip: 10.33.1.114
        port: 9876
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "dashicons:money-alt"
            hajimari.io/appName: "firefly"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - firefly.local.${SECRET_DOMAIN}
              secretName: "firefly-tls"
          hosts:
            - host: firefly.local.${SECRET_DOMAIN}
              path: /

      - name: password-pusher
        enabled: true
        ip: 10.33.1.114
        port: 5100
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-production"
            hajimari.io/enable: "true"
            hajimari.io/icon: "ri:lock-password-line"
            hajimari.io/appName: "password-pusher"
            nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          tls:
            - hosts:
                - pw.local.${SECRET_DOMAIN}
              secretName: "password-pusher-tls"
          hosts:
            - host: pw.local.${SECRET_DOMAIN}
              path: /

    ingressPort:
      http: 80
      tls: 443

    connectionTest:
      waitretry: 2
      readtimeout: 2
      tries: 30
