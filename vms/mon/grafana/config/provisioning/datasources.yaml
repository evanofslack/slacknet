apiVersion: 1

datasources:

  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    uid: Prometheus
    url: http://prometheus:9090
    version: 1
    editable: true

  - name: Mimir
    type: prometheus
    access: proxy
    orgId: 1
    uid: Mimir
    url: http://mimir-gateway:9010/prometheus
    version: 1
    editable: true
    jsonData:
      httpHeaderName1: 'X-Scope-OrgID'
      alertmanagerUid: 'alertmanager'
    secureJsonData:
      httpHeaderValue1: 'slacknet'

  - name: Mimir Alertmanager
    type: alertmanager
    access: proxy
    orgId: 1
    uid: Alertmanager
    url: http://mimir-gateway:9010/
    version: 1
    editable: true
    jsonData:
      httpHeaderName1: 'X-Scope-OrgID'
      implementation: 'cortex'
    secureJsonData:
      httpHeaderValue1: 'slacknet'

  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    uid: Loki
    url: http://loki:3100
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    jsonData:
      derivedFields:
        - datasourceUid: Tempo
          matcherRegex: '"(?:trace_id|traceID|trace-id)":"(\w+)"'
          name: TraceID
          url: "$${__value.raw}"
        - datasourceUid: Tempo
          matcherRegex: '"(?:span_id|spanID|span-id)":"(\w+)"'
          name: SpanID
          url: "$${__value.raw}"

  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    uid: Tempo
    url: http://tempo:3200
    basicAuth: false
    isDefault: false
    version: 1
    apiVersion: 1
    editable: true
    jsonData:
      httpMethod: GET
      serviceMap:
        datasourceUid: Prometheus
      lokiSearch:
        datasourceUid: Loki
      tracesToLogsV2:
        datasourceUid: Loki
        spanStartTimeShift: "30m"
        spanEndTimeShift: "-30m"
        tags: [{ key: ‘service.name’, value: ‘app’ }]
        filterByTraceID: true
        filterBySpanID: true

